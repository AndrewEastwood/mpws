define("plugin/shop/toolbox/js/view/categoriesTree", [
    'default/js/lib/sandbox',
    'default/js/lib/backbone',
    'default/js/lib/utils',
    'plugin/shop/toolbox/js/collection/categoriesTree',
    /* template */
    'default/js/plugin/hbs!plugin/shop/toolbox/hbs/categoriesTree',
    /* lang */
    'default/js/plugin/i18n!plugin/shop/toolbox/nls/translation',
    /* extensions */
    'default/js/lib/jstree'
], function (Sandbox, Backbone, Utils, CollectionCategoriesTree, tpl, lang) {
    var CategoriesTree = Backbone.View.extend({
        className: 'shop-toolbox-categories',
        template: tpl,
        lang: lang,
        initialize: function () {
            this.collection = new CollectionCategoriesTree();
            this.listenTo(this.collection, 'reset', this.render);
        },
        render: function () {
            var self = this;
            this.$el.html(tpl(Utils.getHBSTemplateData(this)));
            // debugger;
            // this.$('#jstree_categories-ID').jstree({
            //     "plugins" : [
            //         "contextmenu", "djstrnd", "search",
            //         "state", "types", "wholerow"
            //       ]
            // });
            this.$('#html1').jstree({
                core: {
                    check_callback: true,
                    themes: {
                        responsive: false,
                        stripes: true,
                        variant: 'small'
                    }
                },
                plugins: ["state", "contextmenu", "dnd"],
                contextmenu: {
                    items: function () {
                        var tmp = $.jstree.defaults.contextmenu.items();
                        delete tmp.ccp;
                        tmp.create.label = "Нова категорія";
                        tmp.rename.label = "Переіменувати";
                        tmp.remove.label = "Видалити";
                        tmp.remove._disabled = function (data) {
                            return data.reference.parent().data('childcount') > 0;
                        }


                        tmp.create.action = function (data) {
                            // debugger;
                            var inst = $.jstree.reference(data.reference),
                                obj = inst.get_node(data.reference),
                                nodeData = data.reference.parent().data();
                            inst.create_node(obj, {
                                ParentID: nodeData.parentid || null,
                                RootID: nodeData.rootid || null,
                                Name: tmp.create.label,
                                text: tmp.create.label
                            }, "last", function (new_node) {
                                setTimeout(function () { inst.edit(new_node); },0);
                            });
                        }
                        return tmp;
                    }
                }
            }).on('create_node.jstree', function (e, data) {
                // debugger;
                self.collection.create(data.node.original, {
                    success: function (model, resp, options) {
                        if (!resp || (resp.errors && resp.errors.length) || !resp.ID)
                            data.instance.refresh();
                        else
                            data.instance.set_id(data.node, resp.ID);
                    },
                    error: function () {
                        data.instance.refresh();
                    }
                });
            }).on('rename_node.jstree', function (e, data) {
                debugger;
                var id = parseInt(data.node.id, 10);
                var model = self.collection.get(_id);
                if (model && model.save) {
                    model.save({
                        Name: data.node.text.trim(),
                        ParentID: data.node.data.parentid || null,
                        RootID: data.node.data.rootid || null
                    })
                }
                // $.get('?operation=rename_node', { 'id' : data.node.id, 'text' : data.text })
                //     .done(function (d) {
                //         data.instance.set_id(data.node, d.id);
                //     })
                //     .fail(function () {
                //         data.instance.refresh();
                //     });
            });

            return this;
        }
    });

    return CategoriesTree;
});